{
  "version": 3,
  "sources": ["../../cubic-spline/index.js"],
  "sourcesContent": ["module.exports = class Spline {\n  constructor(xs, ys) {\n    this.xs = xs;\n    this.ys = ys;\n    this.ks = this.getNaturalKs(new Float64Array(this.xs.length));\n  }\n\n  getNaturalKs(ks) {\n    const n = this.xs.length - 1;\n    const A = zerosMat(n + 1, n + 2);\n\n    for (\n      let i = 1;\n      i < n;\n      i++ // rows\n    ) {\n      A[i][i - 1] = 1 / (this.xs[i] - this.xs[i - 1]);\n      A[i][i] =\n        2 *\n        (1 / (this.xs[i] - this.xs[i - 1]) + 1 / (this.xs[i + 1] - this.xs[i]));\n      A[i][i + 1] = 1 / (this.xs[i + 1] - this.xs[i]);\n      A[i][n + 1] =\n        3 *\n        ((this.ys[i] - this.ys[i - 1]) /\n          ((this.xs[i] - this.xs[i - 1]) * (this.xs[i] - this.xs[i - 1])) +\n          (this.ys[i + 1] - this.ys[i]) /\n            ((this.xs[i + 1] - this.xs[i]) * (this.xs[i + 1] - this.xs[i])));\n    }\n\n    A[0][0] = 2 / (this.xs[1] - this.xs[0]);\n    A[0][1] = 1 / (this.xs[1] - this.xs[0]);\n    A[0][n + 1] =\n      (3 * (this.ys[1] - this.ys[0])) /\n      ((this.xs[1] - this.xs[0]) * (this.xs[1] - this.xs[0]));\n\n    A[n][n - 1] = 1 / (this.xs[n] - this.xs[n - 1]);\n    A[n][n] = 2 / (this.xs[n] - this.xs[n - 1]);\n    A[n][n + 1] =\n      (3 * (this.ys[n] - this.ys[n - 1])) /\n      ((this.xs[n] - this.xs[n - 1]) * (this.xs[n] - this.xs[n - 1]));\n\n    return solve(A, ks);\n  }\n\n  /**\n   * inspired by https://stackoverflow.com/a/40850313/4417327\n   */\n  getIndexBefore(target) {\n    let low = 0;\n    let high = this.xs.length;\n    let mid = 0;\n    while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      if (this.xs[mid] < target && mid !== low) {\n        low = mid;\n      } else if (this.xs[mid] >= target && mid !== high) {\n        high = mid;\n      } else {\n        high = low;\n      }\n    }\n    return low + 1;\n  }\n\n  at(x) {\n    let i = this.getIndexBefore(x);\n    const t = (x - this.xs[i - 1]) / (this.xs[i] - this.xs[i - 1]);\n    const a =\n      this.ks[i - 1] * (this.xs[i] - this.xs[i - 1]) -\n      (this.ys[i] - this.ys[i - 1]);\n    const b =\n      -this.ks[i] * (this.xs[i] - this.xs[i - 1]) +\n      (this.ys[i] - this.ys[i - 1]);\n    const q =\n      (1 - t) * this.ys[i - 1] +\n      t * this.ys[i] +\n      t * (1 - t) * (a * (1 - t) + b * t);\n    return q;\n  }\n};\n\nfunction solve(A, ks) {\n  const m = A.length;\n  let h = 0;\n  let k = 0;\n  while (h < m && k <= m) {\n    let i_max = 0;\n    let max = -Infinity;\n    for (let i = h; i < m; i++) {\n      const v = Math.abs(A[i][k]);\n      if (v > max) {\n        i_max = i;\n        max = v;\n      }\n    }\n\n    if (A[i_max][k] === 0) {\n      k++;\n    } else {\n      swapRows(A, h, i_max);\n      for (let i = h + 1; i < m; i++) {\n        const f = A[i][k] / A[h][k];\n        A[i][k] = 0;\n        for (let j = k + 1; j <= m; j++) A[i][j] -= A[h][j] * f;\n      }\n      h++;\n      k++;\n    }\n  }\n\n  for (\n    let i = m - 1;\n    i >= 0;\n    i-- // rows = columns\n  ) {\n    var v = 0;\n    if (A[i][i]) {\n      v = A[i][m] / A[i][i];\n    }\n    ks[i] = v;\n    for (\n      let j = i - 1;\n      j >= 0;\n      j-- // rows\n    ) {\n      A[j][m] -= A[j][i] * v;\n      A[j][i] = 0;\n    }\n  }\n  return ks;\n}\n\nfunction zerosMat(r, c) {\n  const A = [];\n  for (let i = 0; i < r; i++) A.push(new Float64Array(c));\n  return A;\n}\n\nfunction swapRows(m, k, l) {\n  let p = m[k];\n  m[k] = m[l];\n  m[l] = p;\n}\n"],
  "mappings": "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",
  "names": ["v"]
}
