{
  "version": 3,
  "sources": ["../../integrate-adaptive-simpson/index.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = integrate;\n\n// This algorithm adapted from pseudocode in:\n// http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf\nfunction adsimp (f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n  if (state.nanEncountered) {\n    return NaN;\n  }\n\n  var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n\n  h = b - a;\n  f1 = f(a + h * 0.25);\n  f2 = f(b - h * 0.25);\n\n  // Simple check for NaN:\n  if (isNaN(f1)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  // Simple check for NaN:\n  if (isNaN(f2)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  sl = h * (fa + 4 * f1 + fm) / 12;\n  sr = h * (fm + 4 * f2 + fb) / 12;\n  s2 = sl + sr;\n  err = (s2 - V0) / 15;\n\n  if (depth > maxdepth) {\n    state.maxDepthCount++;\n    return s2 + err;\n  } else if (Math.abs(err) < tol) {\n    return s2 + err;\n  } else {\n    m = a + h * 0.5;\n\n    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V1)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V2)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    return V1 + V2;\n  }\n}\n\nfunction integrate (f, a, b, tol, maxdepth) {\n  var state = {\n    maxDepthCount: 0,\n    nanEncountered: false\n  };\n\n  if (tol === undefined) {\n    tol = 1e-8;\n  }\n  if (maxdepth === undefined) {\n    maxdepth = 20;\n  }\n\n  var fa = f(a);\n  var fm = f(0.5 * (a + b));\n  var fb = f(b);\n\n  var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n  var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n  if (state.maxDepthCount > 0 && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n  }\n\n  if (state.nanEncountered && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: NaN encountered. Halting early.');\n  }\n\n  return result;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AAIjB,aAAS,OAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,UAAU,OAAO,OAAO;AACrE,UAAI,MAAM,gBAAgB;AACxB,eAAO;AAAA,MACT;AAEA,UAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI;AAEtC,UAAI,IAAI;AACR,WAAK,EAAE,IAAI,IAAI,IAAI;AACnB,WAAK,EAAE,IAAI,IAAI,IAAI;AAGnB,UAAI,MAAM,EAAE,GAAG;AACb,cAAM,iBAAiB;AACvB;AAAA,MACF;AAGA,UAAI,MAAM,EAAE,GAAG;AACb,cAAM,iBAAiB;AACvB;AAAA,MACF;AAEA,WAAK,KAAK,KAAK,IAAI,KAAK,MAAM;AAC9B,WAAK,KAAK,KAAK,IAAI,KAAK,MAAM;AAC9B,WAAK,KAAK;AACV,aAAO,KAAK,MAAM;AAElB,UAAI,QAAQ,UAAU;AACpB,cAAM;AACN,eAAO,KAAK;AAAA,MACd,WAAW,KAAK,IAAI,GAAG,IAAI,KAAK;AAC9B,eAAO,KAAK;AAAA,MACd,OAAO;AACL,YAAI,IAAI,IAAI;AAEZ,aAAK,OAAO,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,MAAM,KAAK,UAAU,QAAQ,GAAG,KAAK;AAE1E,YAAI,MAAM,EAAE,GAAG;AACb,gBAAM,iBAAiB;AACvB,iBAAO;AAAA,QACT;AAEA,aAAK,OAAO,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,MAAM,KAAK,UAAU,QAAQ,GAAG,KAAK;AAE1E,YAAI,MAAM,EAAE,GAAG;AACb,gBAAM,iBAAiB;AACvB,iBAAO;AAAA,QACT;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,aAAS,UAAW,GAAG,GAAG,GAAG,KAAK,UAAU;AAC1C,UAAI,QAAQ;AAAA,QACV,eAAe;AAAA,QACf,gBAAgB;AAAA,MAClB;AAEA,UAAI,QAAQ,QAAW;AACrB,cAAM;AAAA,MACR;AACA,UAAI,aAAa,QAAW;AAC1B,mBAAW;AAAA,MACb;AAEA,UAAI,KAAK,EAAE,CAAC;AACZ,UAAI,KAAK,EAAE,OAAO,IAAI,EAAE;AACxB,UAAI,KAAK,EAAE,CAAC;AAEZ,UAAI,MAAM,KAAK,IAAI,KAAK,OAAO,IAAI,KAAK;AAExC,UAAI,SAAS,OAAO,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,UAAU,GAAG,KAAK;AAEpE,UAAI,MAAM,gBAAgB,KAAK,WAAW,QAAQ,MAAM;AACtD,gBAAQ,KAAK,mEAAmE,WAAW,eAAe,MAAM,gBAAgB,QAAQ;AAAA,MAC1I;AAEA,UAAI,MAAM,kBAAkB,WAAW,QAAQ,MAAM;AACnD,gBAAQ,KAAK,sEAAsE;AAAA,MACrF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;",
  "names": []
}
